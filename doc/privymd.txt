*privymd.txt*                    Plugin PrivyMD — GPG Encryption for Markdown
==============================================================================
Table of Contents                                  *privimd-table-of-contents*

1. a Neovim plugin       |privymd|
  - Requirements         |privymd-requirements|
  - Installation         |privymd-install|
  - Configuration        |privymd-config|
2. Usage                 |privymd-usage|

==============================================================================
PrivyMD                                                           *privymd*

PrivyMD is a Neovim plugin that lets you edit Markdown files containing
encrypted text blocks managed by GPG.

Encrypted sections are defined using a Markdown code fence with the
language identifier `gpg`, for example:

>markdown
```gpg
Secret content here
```
<

When opening a file, PrivyMD decrypts these blocks automatically.
When saving, it re-encrypts them — ensuring that **no plaintext is ever
written to disk**.

REQUIREMENTS                                                *privymd-requirements*

- Neovim ≥ 0.10  
- `gpg` (GNU Privacy Guard) available in your `$PATH`

INSTALLATION                                                *privymd-install*

Example using **Lazy.nvim**:

>lua
return {
  "icarios-dev/privymd.nvim",
  ft = "markdown",
  config = function()
    require("privymd").setup({
      auto_decrypt = true,
      auto_encrypt = true,
      progress = true,
    })
  end
}
<

CONFIGURATION                                               *privymd-config*

Default configuration:

>lua
require("privymd").setup({
  ft_pattern   = "*.md",   -- file pattern to match
  auto_decrypt = true,     -- automatically decrypt on buffer open
  auto_encrypt = true,     -- automatically encrypt before save
  progress     = true,     -- show a progress spinner or counter
})
<

All options are optional.  
If omitted, default values are applied.

==============================================================================
USAGE                                                          *privymd-usage*

FRONT MATTER YAML                                           *privymd-frontmatter*

The GPG recipient is defined in the YAML front matter at the top of the
Markdown file:

```yaml
---
gpg-recipient: GPG-key-identifier
---
```

If no recipient is found, PrivyMD will warn you and ask whether to
proceed with an unencrypted save.

COMMANDS                                                    *privymd-commands*

PrivyMD provides the following user commands:

:PrivyDecrypt         Decrypt the current buffer in memory.  
:PrivyEncrypt         Encrypt and save the current buffer.  
:PrivyToggle          Toggle encryption/decryption of the block under cursor.  
:PrivyMDClearPass     Forget the cached passphrase for the session.  
:PrivyMDShowBlocks    Print all detected GPG blocks to the message area.

AUTOMATION                                                 *privymd-hooks*

PrivyMD automatically registers the following autocommands:

- **BufReadPost**, **BufWinEnter** → auto-decrypt buffer on open  
- **BufWriteCmd** → encrypt before saving  

These can be disabled by setting the related configuration options to
`false`.

==============================================================================
FEATURES                                                   *privymd-features*

1. Zero plaintext on disk — all encryption/decryption happens in memory.  
2. Transparent workflow: edit as usual, PrivyMD handles encryption.  
3. One-time passphrase prompt per session.  
4. Fully asynchronous decryption.  
5. Designed specifically for Markdown + GPG workflow.

==============================================================================
DEBUGGING AND LOGGING                                      *privymd-debug*

PrivyMD uses an internal logging module to display information and
warnings through `vim.notify`.

To increase verbosity:
>lua
require("privymd.utils.logger").set_log_level("debug")
<

Available log levels:
`trace`, `debug`, `info`, `warn`, `error`

==============================================================================
DEVELOPER NOTES                                            *privymd-dev*

Main modules:
- `privymd.block`         → block detection and manipulation
- `privymd.frontmatter`   → YAML header parsing
- `privymd.gpg`           → encryption/decryption interface
- `privymd.hooks`         → integration with buffer events
- `privymd.utils.logger`  → internal notification wrapper

==============================================================================
SOURCE AND CONTRIBUTIONS                                   *privymd-source*

Source code: https://github.com/icarios-dev/privymd.nvim

Issues and pull requests are welcome!  
Feedback and feature ideas are encouraged.

==============================================================================
LICENSE                                                    *privymd-license*

MIT License
Copyright (c) 2025 Icarios

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
